/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ContainerManifestResponse Serializer for Manifests.
type ContainerManifestResponse struct {
	PulpHref *string `json:"pulp_href,omitempty"`
	// Timestamp of creation.
	PulpCreated *time.Time `json:"pulp_created,omitempty"`
	// Artifact file representing the physical content
	Artifact string `json:"artifact"`
	// sha256 of the Manifest file
	Digest string `json:"digest"`
	// Manifest schema version
	SchemaVersion int32 `json:"schema_version"`
	// Manifest media type of the file
	MediaType string `json:"media_type"`
	// Manifests that are referenced by this Manifest List
	ListedManifests []string `json:"listed_manifests"`
	// Blob that contains configuration for this Manifest
	ConfigBlob *string `json:"config_blob,omitempty"`
	// Blobs that are referenced by this Manifest
	Blobs []string `json:"blobs"`
}

// NewContainerManifestResponse instantiates a new ContainerManifestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerManifestResponse(artifact string, digest string, schemaVersion int32, mediaType string, listedManifests []string, blobs []string) *ContainerManifestResponse {
	this := ContainerManifestResponse{}
	this.Artifact = artifact
	this.Digest = digest
	this.SchemaVersion = schemaVersion
	this.MediaType = mediaType
	this.ListedManifests = listedManifests
	this.Blobs = blobs
	return &this
}

// NewContainerManifestResponseWithDefaults instantiates a new ContainerManifestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerManifestResponseWithDefaults() *ContainerManifestResponse {
	this := ContainerManifestResponse{}
	return &this
}

// GetPulpHref returns the PulpHref field value if set, zero value otherwise.
func (o *ContainerManifestResponse) GetPulpHref() string {
	if o == nil || o.PulpHref == nil {
		var ret string
		return ret
	}
	return *o.PulpHref
}

// GetPulpHrefOk returns a tuple with the PulpHref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetPulpHrefOk() (*string, bool) {
	if o == nil || o.PulpHref == nil {
		return nil, false
	}
	return o.PulpHref, true
}

// HasPulpHref returns a boolean if a field has been set.
func (o *ContainerManifestResponse) HasPulpHref() bool {
	if o != nil && o.PulpHref != nil {
		return true
	}

	return false
}

// SetPulpHref gets a reference to the given string and assigns it to the PulpHref field.
func (o *ContainerManifestResponse) SetPulpHref(v string) {
	o.PulpHref = &v
}

// GetPulpCreated returns the PulpCreated field value if set, zero value otherwise.
func (o *ContainerManifestResponse) GetPulpCreated() time.Time {
	if o == nil || o.PulpCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.PulpCreated
}

// GetPulpCreatedOk returns a tuple with the PulpCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetPulpCreatedOk() (*time.Time, bool) {
	if o == nil || o.PulpCreated == nil {
		return nil, false
	}
	return o.PulpCreated, true
}

// HasPulpCreated returns a boolean if a field has been set.
func (o *ContainerManifestResponse) HasPulpCreated() bool {
	if o != nil && o.PulpCreated != nil {
		return true
	}

	return false
}

// SetPulpCreated gets a reference to the given time.Time and assigns it to the PulpCreated field.
func (o *ContainerManifestResponse) SetPulpCreated(v time.Time) {
	o.PulpCreated = &v
}

// GetArtifact returns the Artifact field value
func (o *ContainerManifestResponse) GetArtifact() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Artifact
}

// GetArtifactOk returns a tuple with the Artifact field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetArtifactOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Artifact, true
}

// SetArtifact sets field value
func (o *ContainerManifestResponse) SetArtifact(v string) {
	o.Artifact = v
}

// GetDigest returns the Digest field value
func (o *ContainerManifestResponse) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *ContainerManifestResponse) SetDigest(v string) {
	o.Digest = v
}

// GetSchemaVersion returns the SchemaVersion field value
func (o *ContainerManifestResponse) GetSchemaVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SchemaVersion
}

// GetSchemaVersionOk returns a tuple with the SchemaVersion field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetSchemaVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemaVersion, true
}

// SetSchemaVersion sets field value
func (o *ContainerManifestResponse) SetSchemaVersion(v int32) {
	o.SchemaVersion = v
}

// GetMediaType returns the MediaType field value
func (o *ContainerManifestResponse) GetMediaType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaType, true
}

// SetMediaType sets field value
func (o *ContainerManifestResponse) SetMediaType(v string) {
	o.MediaType = v
}

// GetListedManifests returns the ListedManifests field value
func (o *ContainerManifestResponse) GetListedManifests() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ListedManifests
}

// GetListedManifestsOk returns a tuple with the ListedManifests field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetListedManifestsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ListedManifests, true
}

// SetListedManifests sets field value
func (o *ContainerManifestResponse) SetListedManifests(v []string) {
	o.ListedManifests = v
}

// GetConfigBlob returns the ConfigBlob field value if set, zero value otherwise.
func (o *ContainerManifestResponse) GetConfigBlob() string {
	if o == nil || o.ConfigBlob == nil {
		var ret string
		return ret
	}
	return *o.ConfigBlob
}

// GetConfigBlobOk returns a tuple with the ConfigBlob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetConfigBlobOk() (*string, bool) {
	if o == nil || o.ConfigBlob == nil {
		return nil, false
	}
	return o.ConfigBlob, true
}

// HasConfigBlob returns a boolean if a field has been set.
func (o *ContainerManifestResponse) HasConfigBlob() bool {
	if o != nil && o.ConfigBlob != nil {
		return true
	}

	return false
}

// SetConfigBlob gets a reference to the given string and assigns it to the ConfigBlob field.
func (o *ContainerManifestResponse) SetConfigBlob(v string) {
	o.ConfigBlob = &v
}

// GetBlobs returns the Blobs field value
func (o *ContainerManifestResponse) GetBlobs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Blobs
}

// GetBlobsOk returns a tuple with the Blobs field value
// and a boolean to check if the value has been set.
func (o *ContainerManifestResponse) GetBlobsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Blobs, true
}

// SetBlobs sets field value
func (o *ContainerManifestResponse) SetBlobs(v []string) {
	o.Blobs = v
}

func (o ContainerManifestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PulpHref != nil {
		toSerialize["pulp_href"] = o.PulpHref
	}
	if o.PulpCreated != nil {
		toSerialize["pulp_created"] = o.PulpCreated
	}
	if true {
		toSerialize["artifact"] = o.Artifact
	}
	if true {
		toSerialize["digest"] = o.Digest
	}
	if true {
		toSerialize["schema_version"] = o.SchemaVersion
	}
	if true {
		toSerialize["media_type"] = o.MediaType
	}
	if true {
		toSerialize["listed_manifests"] = o.ListedManifests
	}
	if o.ConfigBlob != nil {
		toSerialize["config_blob"] = o.ConfigBlob
	}
	if true {
		toSerialize["blobs"] = o.Blobs
	}
	return json.Marshal(toSerialize)
}

type NullableContainerManifestResponse struct {
	value *ContainerManifestResponse
	isSet bool
}

func (v NullableContainerManifestResponse) Get() *ContainerManifestResponse {
	return v.value
}

func (v *NullableContainerManifestResponse) Set(val *ContainerManifestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerManifestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerManifestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerManifestResponse(val *ContainerManifestResponse) *NullableContainerManifestResponse {
	return &NullableContainerManifestResponse{value: val, isSet: true}
}

func (v NullableContainerManifestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerManifestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


