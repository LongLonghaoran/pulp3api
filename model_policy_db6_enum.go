/*
 * Pulp 3 API
 *
 * Fetch, Upload, Organize, and Distribute Software Packages
 *
 * API version: v3
 * Contact: pulp-list@redhat.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// PolicyDb6Enum the model 'PolicyDb6Enum'
type PolicyDb6Enum string

// List of PolicyDb6Enum
const (
	// IMMEDIATE PolicyDb6Enum = "immediate"
	WHEN_SYNCING_DOWNLOAD_ALL_METADATA_AND_CONTENT_NOW PolicyDb6Enum = "When syncing, download all metadata and content now."
)

func (v *PolicyDb6Enum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PolicyDb6Enum(value)
	for _, existing := range []PolicyDb6Enum{ "immediate", "When syncing, download all metadata and content now.",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PolicyDb6Enum", value)
}

// Ptr returns reference to PolicyDb6Enum value
func (v PolicyDb6Enum) Ptr() *PolicyDb6Enum {
	return &v
}

type NullablePolicyDb6Enum struct {
	value *PolicyDb6Enum
	isSet bool
}

func (v NullablePolicyDb6Enum) Get() *PolicyDb6Enum {
	return v.value
}

func (v *NullablePolicyDb6Enum) Set(val *PolicyDb6Enum) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyDb6Enum) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyDb6Enum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyDb6Enum(val *PolicyDb6Enum) *NullablePolicyDb6Enum {
	return &NullablePolicyDb6Enum{value: val, isSet: true}
}

func (v NullablePolicyDb6Enum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyDb6Enum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

