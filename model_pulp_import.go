/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PulpImport Serializer for call to import into Pulp.
type PulpImport struct {
	// Path to export that will be imported.
	Path *string `json:"path,omitempty"`
	// Path to a table-of-contents file describing chunks to be validated, reassembled, and imported.
	Toc *string `json:"toc,omitempty"`
}

// NewPulpImport instantiates a new PulpImport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPulpImport() *PulpImport {
	this := PulpImport{}
	return &this
}

// NewPulpImportWithDefaults instantiates a new PulpImport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPulpImportWithDefaults() *PulpImport {
	this := PulpImport{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *PulpImport) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PulpImport) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *PulpImport) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *PulpImport) SetPath(v string) {
	o.Path = &v
}

// GetToc returns the Toc field value if set, zero value otherwise.
func (o *PulpImport) GetToc() string {
	if o == nil || o.Toc == nil {
		var ret string
		return ret
	}
	return *o.Toc
}

// GetTocOk returns a tuple with the Toc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PulpImport) GetTocOk() (*string, bool) {
	if o == nil || o.Toc == nil {
		return nil, false
	}
	return o.Toc, true
}

// HasToc returns a boolean if a field has been set.
func (o *PulpImport) HasToc() bool {
	if o != nil && o.Toc != nil {
		return true
	}

	return false
}

// SetToc gets a reference to the given string and assigns it to the Toc field.
func (o *PulpImport) SetToc(v string) {
	o.Toc = &v
}

func (o PulpImport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Toc != nil {
		toSerialize["toc"] = o.Toc
	}
	return json.Marshal(toSerialize)
}

type NullablePulpImport struct {
	value *PulpImport
	isSet bool
}

func (v NullablePulpImport) Get() *PulpImport {
	return v.value
}

func (v *NullablePulpImport) Set(val *PulpImport) {
	v.value = val
	v.isSet = true
}

func (v NullablePulpImport) IsSet() bool {
	return v.isSet
}

func (v *NullablePulpImport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePulpImport(val *PulpImport) *NullablePulpImport {
	return &NullablePulpImport{value: val, isSet: true}
}

func (v NullablePulpImport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePulpImport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


