/*
Pulp 3 API

Fetch, Upload, Organize, and Distribute Software Packages

API version: v3
Contact: pulp-list@redhat.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatusResponse Serializer for the status information of the app
type StatusResponse struct {
	// Version information of Pulp components
	Versions []VersionResponse `json:"versions"`
	// List of online workers known to the application. An online worker is actively heartbeating and can respond to new work
	OnlineWorkers []WorkerResponse `json:"online_workers"`
	// List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients
	OnlineContentApps []ContentAppStatusResponse `json:"online_content_apps"`
	DatabaseConnection StatusResponseDatabaseConnection `json:"database_connection"`
	RedisConnection *StatusResponseRedisConnection `json:"redis_connection,omitempty"`
	Storage *StatusResponseStorage `json:"storage,omitempty"`
}

// NewStatusResponse instantiates a new StatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusResponse(versions []VersionResponse, onlineWorkers []WorkerResponse, onlineContentApps []ContentAppStatusResponse, databaseConnection StatusResponseDatabaseConnection) *StatusResponse {
	this := StatusResponse{}
	this.Versions = versions
	this.OnlineWorkers = onlineWorkers
	this.OnlineContentApps = onlineContentApps
	this.DatabaseConnection = databaseConnection
	return &this
}

// NewStatusResponseWithDefaults instantiates a new StatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusResponseWithDefaults() *StatusResponse {
	this := StatusResponse{}
	return &this
}

// GetVersions returns the Versions field value
func (o *StatusResponse) GetVersions() []VersionResponse {
	if o == nil {
		var ret []VersionResponse
		return ret
	}

	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetVersionsOk() ([]VersionResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Versions, true
}

// SetVersions sets field value
func (o *StatusResponse) SetVersions(v []VersionResponse) {
	o.Versions = v
}

// GetOnlineWorkers returns the OnlineWorkers field value
func (o *StatusResponse) GetOnlineWorkers() []WorkerResponse {
	if o == nil {
		var ret []WorkerResponse
		return ret
	}

	return o.OnlineWorkers
}

// GetOnlineWorkersOk returns a tuple with the OnlineWorkers field value
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetOnlineWorkersOk() ([]WorkerResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnlineWorkers, true
}

// SetOnlineWorkers sets field value
func (o *StatusResponse) SetOnlineWorkers(v []WorkerResponse) {
	o.OnlineWorkers = v
}

// GetOnlineContentApps returns the OnlineContentApps field value
func (o *StatusResponse) GetOnlineContentApps() []ContentAppStatusResponse {
	if o == nil {
		var ret []ContentAppStatusResponse
		return ret
	}

	return o.OnlineContentApps
}

// GetOnlineContentAppsOk returns a tuple with the OnlineContentApps field value
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetOnlineContentAppsOk() ([]ContentAppStatusResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnlineContentApps, true
}

// SetOnlineContentApps sets field value
func (o *StatusResponse) SetOnlineContentApps(v []ContentAppStatusResponse) {
	o.OnlineContentApps = v
}

// GetDatabaseConnection returns the DatabaseConnection field value
func (o *StatusResponse) GetDatabaseConnection() StatusResponseDatabaseConnection {
	if o == nil {
		var ret StatusResponseDatabaseConnection
		return ret
	}

	return o.DatabaseConnection
}

// GetDatabaseConnectionOk returns a tuple with the DatabaseConnection field value
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetDatabaseConnectionOk() (*StatusResponseDatabaseConnection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseConnection, true
}

// SetDatabaseConnection sets field value
func (o *StatusResponse) SetDatabaseConnection(v StatusResponseDatabaseConnection) {
	o.DatabaseConnection = v
}

// GetRedisConnection returns the RedisConnection field value if set, zero value otherwise.
func (o *StatusResponse) GetRedisConnection() StatusResponseRedisConnection {
	if o == nil || o.RedisConnection == nil {
		var ret StatusResponseRedisConnection
		return ret
	}
	return *o.RedisConnection
}

// GetRedisConnectionOk returns a tuple with the RedisConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetRedisConnectionOk() (*StatusResponseRedisConnection, bool) {
	if o == nil || o.RedisConnection == nil {
		return nil, false
	}
	return o.RedisConnection, true
}

// HasRedisConnection returns a boolean if a field has been set.
func (o *StatusResponse) HasRedisConnection() bool {
	if o != nil && o.RedisConnection != nil {
		return true
	}

	return false
}

// SetRedisConnection gets a reference to the given StatusResponseRedisConnection and assigns it to the RedisConnection field.
func (o *StatusResponse) SetRedisConnection(v StatusResponseRedisConnection) {
	o.RedisConnection = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *StatusResponse) GetStorage() StatusResponseStorage {
	if o == nil || o.Storage == nil {
		var ret StatusResponseStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusResponse) GetStorageOk() (*StatusResponseStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *StatusResponse) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given StatusResponseStorage and assigns it to the Storage field.
func (o *StatusResponse) SetStorage(v StatusResponseStorage) {
	o.Storage = &v
}

func (o StatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["versions"] = o.Versions
	}
	if true {
		toSerialize["online_workers"] = o.OnlineWorkers
	}
	if true {
		toSerialize["online_content_apps"] = o.OnlineContentApps
	}
	if true {
		toSerialize["database_connection"] = o.DatabaseConnection
	}
	if o.RedisConnection != nil {
		toSerialize["redis_connection"] = o.RedisConnection
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	return json.Marshal(toSerialize)
}

type NullableStatusResponse struct {
	value *StatusResponse
	isSet bool
}

func (v NullableStatusResponse) Get() *StatusResponse {
	return v.value
}

func (v *NullableStatusResponse) Set(val *StatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusResponse(val *StatusResponse) *NullableStatusResponse {
	return &NullableStatusResponse{value: val, isSet: true}
}

func (v NullableStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


